name: ci

on:
  push:
    branches:
      - master
    tags:
      - 'v*'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: pwd ls
        run: |
          pwd
          ls -Al

      - name: install python dependencies
        run: python3 -m pip install -r requirements.txt

      - name: lint
        run: make lint

      - name: test
        run: make test

  build-and-publish-to-pypi:
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags')"
    needs: test
    steps:
      - uses: actions/checkout@master
      - name: Set up Python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Install pypa/build
        run: python -m pip install build --user

      - name: Build a source tarball
        run: python -m build --sdist --outdir dist/ .

      # - name: Publish distribution ðŸ“¦ to Test PyPI
      #   uses: pypa/gh-action-pypi-publish@master
      #   with:
      #    password: ${{ secrets.TEST_PYPI_API_TOKEN }}
      #    repository_url: https://test.pypi.org/legacy/

      - name: Publish distribution ðŸ“¦ to PyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}


#  publish:
#    name: push to dockerhub
#    runs-on: ubuntu-latest
#    needs: test
#
#    steps:
#      - name: Set up QEMU
#        uses: docker/setup-qemu-action@v1
#
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v1
#
#      - name: Login to DockerHub
#        uses: docker/login-action@v1
#        with:
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_TOKEN }}
#
#      - name: Build and push Docker images
#        uses: docker/build-push-action@v2
#        with:
#          platforms: linux/amd64,linux/arm64/v8
#          push: true
#          tags: tandav/musictool
#
#  deploy:
#    name: deploy to server
#    runs-on: ubuntu-latest
#    needs: publish
#
#    steps:
#      - run: 'curl -X POST -H "token: ${{ secrets.RESTART_HOOK_TOKEN }}" ${{ secrets.RESTART_HOOK_URL }}'
#
#
